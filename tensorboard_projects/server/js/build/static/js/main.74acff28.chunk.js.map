{"version":3,"sources":["views/Home/Home.js","lib/util/config.js","lib/util/navigation.js","lib/util/redux.js","modules/runs/actions.js","modules/models/actions.js","modules/dashboards/actions.js","components/PageContainer/PageContainerHOC.js","views/Runs/Components/RunDetails/RunDetails.js","lib/util/util.js","views/Runs/Runs.js","modules/documentation/actions.js","views/Documentation/Components/DocumentationTabs.js","views/Documentation/Documentation.js","views/Dashboard/Dashboard.js","views/DashboardList/DashboardList.js","views/Models/Components/AddModel/AddModel.js","views/Models/Components/EditModal/EditModal.js","views/Models/Models.js","views/NotFound404/NotFound404.js","routing.js","modules/models/reducers.js","modules/documentation/reducers.js","modules/runs/reducers.js","modules/dashboards/reducers.js","lib/data_management/api_endpoints.js","lib/util/request.js","lib/data_management/api.js","api.js","modules/models/middleware.js","modules/documentation/middleware.js","modules/runs/middleware.js","modules/dashboards/middleware.js","middleware.js","store.js","App.js","index.js"],"names":["Home","to","Component","dotenv","config","window","_env","process","getBasePath","val","endsWith","slice","getApiUrl","API_URL","Error","getHistory","__history","redirect","options","base_path","startsWith","substr","push","getRouteForPath","path","index","_config","routes","findIndex","otherRoute","route","split","otherPath","parts","every","otherPart","part","undefined","isRouteForPath","createHistory","location","history","historyPackage","pathname","listen","href","actionCreator","type","payload","networkActionCreators","submit","resolved","rejected","reset","networkStateReducer","state","action","error","pending","value","lastUpdated","moment","valueOf","message","includes","defaultValue","reducer","map","GET_RUNS","ARCHIVE_RUNS","UNARCHIVE_RUNS","DELETE_RUNS","EDIT_RUNS","getRuns","archiveRuns","unarchiveRuns","deleteRuns","editRuns","GET_MODELS","ADD_EDIT_MODEL","DELETE_MODEL","getModels","addEditModel","deleteModel","GET_DASHBOARDS","CREATE_DASHBOARD","STOP_DASHBOARD","getDashboards","createDashboard","stopDashboard","Content","Layout","Sider","PageContainerHOC","WrappedComponent","collapsed","onCollapse","setState","onClickDocumentation","onClickDashboards","onClickRuns","this","section","sectionForRoute","props","selected_key","collapsible","style","overflow","height","position","top","left","className","theme","mode","selectedKeys","defaultSelectedKeys","Item","icon","FileSearchOutlined","onClick","LineChartOutlined","minHeight","padding","React","RunDetails","onCancel","changeRunDetailsVisible","onUpdate","params","modelId","runs","runDetails","__store","dispatch","actions","removeField","fieldName","newRunDetails","generateField","layout","labelCol","span","wrapperCol","fields","mandatory_fields","fieldValue","format","label","key","noStyle","name","initialValue","width","disabled","MinusCircleOutlined","Object","keys","addField","newField","newFieldName","newFieldValue","buttonActivated","Group","gutter","onChange","e","changeInput","PlusCircleOutlined","onValuesChange","values","field","newState","target","visible","title","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","xs","offset","sm","getModelName","models","model","filter","x","model_id","model_name","Menu","Runs","onClickArchive","record","domEvent","stopPropagation","rows","selectedRows","length","match","onClickUnarchive","onClickDelete","createContextMenu","row","archivedRuns","startTensorboard","model_version","run_id","dashboard_actions","onChangeSelectedRows","selectedRowKeys","getCheckboxProps","version_name","onClickRow","onClickRunType","onStartCancelRuns","runsToDeleteConfirm","runsToDelete","onDeleteRuns","renderTableRow","overlay","trigger","createTableColums","table_data","columns","dataIndex","defaultSortOrder","sorter","a","b","created_at","render","mandatoryFields","newFields","reduce","result","obj","assign","concat","runDetailsVisible","actions_models","modelID","modelName","archived","loading","dashboards","onRow","rowIndex","event","rowSelection","dataSource","pagination","defaultPageSize","scroll","size","onOk","okText","cancelText","connect","GET_DOCUMENTATION","getDocumentation","postDocumentation","TabPane","Tabs","DocumentationTabs","onEdit","targetKey","add","remove","onChangeTitleTab","addingTab","submitNewTab","addTab","titleNewTab","submitDeleteTab","deleteTab","tabToDelete","onCancelDeleteTab","activeKey","panes","deletePaneTitle","onChangeTab","pane","tab","closable","editorOpen","media","image","video","audio","accepts","excludeControls","language","handleTabChange","readOnly","controls","BraftEditor","createEditorState","content","onCancelNewTab","placeholder","Documentation","redirectDocumentation","submitContent","documentation_summary","documentationSummary","documentation_panes","documentationPanes","handleSummaryChange","editorState","toHTML","activeTabKey","newDocumentationPanes","updatePanes","forEach","i","onOpenEditor","onCloseEditor","newPanes","tabDeleteKey","getSelectedPane","selected_pane","nextProps","documentation","nextDocumentationSummary","nextDocumentationPanes","documentation_metadata","Dashboard","onClickReturnToDashboard","dashboard","dashboard_id","dashboardId","dashboardNotFound","extra","src","DashboardList","redirectDashboards","onOpenDashboard","cancel","model_actions","text","display","onConfirm","pageSize","Meta","Card","AddModel","onClickAddModel","isModalVisible","handleCancel","handleOk","uuid","modal_values","PlusOutlined","description","Panel","Collapse","EditModal","cancelDeleteModel","modelMetadata","isEditModalVisible","initialValues","defaultActiveKey","ghost","header","danger","Models","onClickExperiments","onClickEdit","substring","project","EditOutlined","redirectToHome","status","subTitle","basePath","routerConfig","exact","component","NotFound404","initialStateProject","initialStateDocumentation","API_MODELS","API_MODEL","API_RUNS","API_DOCUMENTATION","API_DASHBOARD","API_CONSTANT_MAP","CancelToken","axios","API_CANCEL_TOKENS","source","get","request","delete_req","post","method","pathName","pathUrl","url","computedConfig","data","json","headers","newCancelToken","token","response","console","log","API","__api","api","get_","post_","delete","delete_","createApi","get_models","res","add_model","delete_model","modelsMiddleware","store","next","get_model_documentation","post_model_documentation","documentationMiddleware","get_runs","archive_runs","unarchive_runs","delete_runs","edit_runs","runsMiddleware","get_dashboards","create_dashboard","stop_dashboard","dashboardMiddleware","middlewares","Tensorboard","midleware","middleware","reducers","combineReducers","payload_index","indexOf","archived_runs","deleted_runs","current_state_path","new_state","edited_runs","run","middlewareRouter","thunkMiddleware","createLogger","diff","predicate","getReduxLogger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","Router","children","renderRoutes","baseName","App","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74acff28.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n        <><Redirect to='/documentation' /></>\n    )\n  }\n}\n\nexport default Home;","import dotenv from 'dotenv';\n\ndotenv.config()\nwindow._env = process.env\n\nexport const getBasePath = () => {\n    let val = window._env[\"REACT_APP_BASE_PATH\"];\n    if (!val) {\n        return \"\"\n    } else {\n        if (val.endsWith('/')) {\n            val = val.slice(0, -1);\n        }\n        \n        return val\n    }\n}\n\nexport const getApiUrl = () => {\n    const val = window.API_URL;\n\n    if (!val) {\n        throw new Error('REACT_APP_TENSORBOARD_PROJECTS_PROXY is not set')\n    } else {\n        return val\n    }\n}\n\nexport const getReduxLogger = () => {\n    return \"on\"\n}","// @flow\nimport React from \"react\";\nimport {Route as RouteComponent, Router, Switch} from \"react-router-dom\";\nimport { getBasePath } from './config';\nimport * as historyPackage from \"history\";\n\nexport function getHistory() {\n    return window.__history;\n}\n\nexport function redirect(options) {\n  const base_path = getBasePath();\n  \n  if (options.startsWith('/')) {\n    options = options.substr(1)\n  }\n  options = base_path + '/' + options\n  getHistory().push(options);\n}\n\n\nexport function isRouteForPath(route, path) {\n  if (path.startsWith('/')) {\n    path = path.substr(1);\n  }\n  path          = path.split('#')[0];\n  let otherPath = route.path;\n  if (otherPath.startsWith('/')) {\n    otherPath = otherPath.substr(1);\n  }\n  let parts      = path.split('/');\n  let otherParts = otherPath.split('/');\n\n  return otherParts.every((otherPart, index) => {\n    let part = parts[index];\n    if (otherPart === undefined) {\n      return false;\n    }\n    return part === otherPart || otherPart.startsWith(\":\") || otherPart === '*';\n  });\n}\n\nexport function getRouteForPath(path) {\n  let index = getHistory()._config.routes.findIndex(otherRoute => isRouteForPath(otherRoute, path));\n  \n  return getHistory()._config.routes[index];\n}\n\nexport function getCurrentRoute() {\n  return getRouteForPath(window.location.pathname);\n}\n\nfunction routeInit(history, location) {\n  if (!location) {\n    location = window.location;\n  }\n  let route      = getRouteForPath(location.pathname);\n  \n  return route;\n}\n\nfunction createHistory(config) {\n  \n    const history = historyPackage.createBrowserHistory();\n    history._config = config;\n  \n    window.__history = history;\n    \n    routeInit(history);\n    history.listen(location => {\n      if (location.href === window.location.href) return;\n    });\n    return history;\n}\n\nexport function sectionForRoute(path) {\n  let route = getRouteForPath(path);\n  \n  return route && route.section;\n}\n\nexport function updateRoute(path) {\n  var history = getHistory();\n  \n  history.push(path)\n}\n\nfunction renderRoutes(config) {\n  return <Switch>\n    {config.routes.map(route => {\n      return <RouteComponent\n        key={route.path}\n        path={route.path}\n        exact={route.exact}\n        component={route.component}\n      />;\n    })}\n  </Switch>;\n}\n\nexport function createRouter(config) {\n    return (props) => {\n      let history = getHistory();\n      if (!history) {\n        history = createHistory(config);\n      }\n      \n      let children    = props.children(renderRoutes(config));\n      return <Router baseName={\"/\"} history={history}>{children}</Router>;\n    };\n  }\n","import moment from \"moment\";\n\nexport function actionCreator(type) {\n    return payload => {\n      return {\n        type,\n        payload\n      };\n    };\n  }\n\nexport function networkActionCreators(type) {\n    return {\n      submit  : actionCreator(`${type}__SUBMIT`),\n      resolved: actionCreator(`${type}__RESOLVED`),\n      rejected: actionCreator(`${type}__REJECTED`),\n      reset: actionCreator(`${type}__RESET`)\n    };\n  }\n\n  export function networkStateReducer(type, state, action) {\n    switch (action.type) {\n      case `${type}__SUBMIT`:\n        return {\n          ...state,\n          error   : null,\n          //value   : state.defaultValue,\n          pending : true,//!!action.payload,\n          //resolved: false,\n          rejected: false\n        };\n      case `${type}__RESOLVED`:\n        return {\n          ...state,\n          value   : action.payload !== undefined ? action.payload: state.value,\n          error   : null,\n          pending : false,\n          resolved: true,\n          rejected: false,\n          lastUpdated: moment().valueOf()\n        };\n      case `${type}__REJECTED`:\n        if (action.payload && action.payload.message && action.payload.message.includes('Operation cancelled by the user')) {\n            return state\n        }\n        return {\n          ...state,\n          //value   : state.defaultValue,\n          error   : action.payload,\n          pending : false,\n          //resolved: false,\n          rejected: true\n        };\n      case `${type}__RESET`:\n        return {\n          ...state,\n          value   : state.defaultValue,\n          error   : null,\n          pending : false,\n          resolved: false,\n          rejected: false,\n          lastUpdated: null\n        };\n      default:\n        return state;\n    }\n  }\n\nexport function reducer(state, action, map) {\n  if (action.type in map) {\n    return map[action.type]();\n  }\n  return state;\n}","import {networkActionCreators} from '../../lib/util/redux'\n\nexport const GET_RUNS = '[RUNS] GET_RUNS'\nexport const ARCHIVE_RUNS = '[RUNS] ARCHIVE_RUNS'\nexport const UNARCHIVE_RUNS = '[RUNS] UNARCHIVE_RUNS'\nexport const DELETE_RUNS = '[RUNS] DELETE_RUNS'\nexport const EDIT_RUNS = '[RUNS] EDIT_RUNS'\n\nexport const getRuns = networkActionCreators(GET_RUNS)\nexport const archiveRuns = networkActionCreators(ARCHIVE_RUNS)\nexport const unarchiveRuns = networkActionCreators(UNARCHIVE_RUNS)\nexport const deleteRuns = networkActionCreators(DELETE_RUNS)\nexport const editRuns = networkActionCreators(EDIT_RUNS)","import {networkActionCreators} from '../../lib/util/redux';\n\nexport const GET_MODELS = '[MODELS] GET_MODELS';\nexport const ADD_EDIT_MODEL = '[MODELS] ADD_OR_EDIT_MODEL';\nexport const DELETE_MODEL = '[MODELS] DELETE_MODEL';\n\nexport const getModels = networkActionCreators(GET_MODELS);\nexport const addEditModel = networkActionCreators(ADD_EDIT_MODEL);\nexport const deleteModel = networkActionCreators(DELETE_MODEL);","import {networkActionCreators} from '../../lib/util/redux'\n\nexport const GET_DASHBOARDS = '[DASHBOARD] GET_DASHBOARDS'\nexport const CREATE_DASHBOARD = '[DASHBOARD] CREATE_DASHBOARD'\nexport const STOP_DASHBOARD = '[DASHBOARD] STOP_DASHBOARD'\n\nexport const getDashboards = networkActionCreators(GET_DASHBOARDS)\nexport const createDashboard = networkActionCreators(CREATE_DASHBOARD)\nexport const stopDashboard = networkActionCreators(STOP_DASHBOARD)","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport './PageContainerHOC.scss';\n  import { LineChartOutlined, FileSearchOutlined } from '@ant-design/icons';\nimport { redirect, sectionForRoute } from '../../lib/util/navigation';\n\nconst { Content, Sider } = Layout;\n\nexport function PageContainerHOC(WrappedComponent) {\n    return class extends React.Component {\n        state = {\n            collapsed: false,\n        };\n        \n        onCollapse = collapsed => {\n            this.setState({ collapsed });\n        };\n        \n        onClickDocumentation = () => {\n            redirect('/documentation')\n        }\n\n        onClickDashboards = () => {\n            redirect('/dashboards')\n        }\n\n        onClickRuns = () => {\n            redirect('/runs')\n        }\n\n        render() {\n            const { collapsed } = this.state;\n            const section = sectionForRoute(this.props.location.pathname);\n\n            let selected_key = [];\n            if (section === 'documentation') {\n                selected_key = ['1'];\n            } else if (section === 'runs') {\n                selected_key = ['2'];\n            } else if (section ==='dashboards') {\n                selected_key = ['3'];\n            }\n            \n            return (\n                <Layout>\n                    <Sider\n                    collapsible\n                    collapsed={collapsed}\n                    onCollapse={this.onCollapse}\n                    style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'sticky',\n                        top: 0,\n                        left: 0\n                    }}\n                    >\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selected_key} defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<FileSearchOutlined />} onClick={this.onClickDocumentation}>\n                            Documentation\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<LineChartOutlined />} onClick={this.onClickRuns}>\n                            Model Runs\n                        </Menu.Item><Menu.Item key=\"3\" icon={<LineChartOutlined />} onClick={this.onClickDashboards}>\n                            Dashboards\n                        </Menu.Item>\n                    </Menu>\n                    </Sider>\n                    <Layout className=\"site-layout\">\n                    <Content style={{ overflow: 'initial'}}>\n                        <div className=\"site-layout-background\" style={{ minHeight: 360, padding: '0 16px' }}>\n                            {<WrappedComponent {...this.props} />}\n                        </div>\n                    </Content>\n                    </Layout>\n                </Layout>\n                )\n      }\n    };\n}","import React, { Component } from 'react';\nimport { Drawer, Button, Form, Input, Col, Row } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport * as actions from './../../../../modules/runs/actions';\nimport * as moment from 'moment';\nimport './RunDetails.scss';\n\nclass RunDetails extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            runDetails: this.props.runDetails,\n            newFieldName: '',\n            newFieldValue: ''\n        }\n    }\n\n    onCancel = () => {\n        this.props.changeRunDetailsVisible(false)\n    }\n\n    onUpdate = () => {\n        this.props.changeRunDetailsVisible(false);\n\n        const modelId = this.props.modelId;\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {\n                runs: [this.state.runDetails]\n            }\n        }\n        window.__store.dispatch(actions.editRuns.submit(payload));\n    }\n\n    removeField = (fieldName) => {\n        const newRunDetails = this.state.runDetails;\n        delete newRunDetails[fieldName]; \n\n        this.setState({\n            runDetails: newRunDetails\n        })\n    }\n\n    generateField = () => {\n        const runDetails = this.state.runDetails;\n        \n        const layout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 16 },\n        }\n\n        // Start by rendering mandatory components\n        let fields = []\n        let mandatory_fields = ['model_name', 'model_version', 'path', 'run_id', 'created_at', 'key', 'archived'];\n\n        mandatory_fields.map(fieldName => {\n            if (['key', 'archived'].includes(fieldName) === false) {\n                let fieldValue = runDetails[fieldName]\n\n                if (fieldName === 'created_at') {\n                    fieldValue = `${moment(fieldValue).format('Do MMM YY, HH:mm:ss')}`\n                }\n\n                fields.push(\n                    <Form.Item {...layout} label={fieldName} key={fieldName} >\n                        <Form.Item noStyle name={fieldName} initialValue={fieldValue}>\n                            <Input style={{ width: '90%' }} disabled/>\n                        </Form.Item>\n                        <Button style={{width: '32px'}} disabled type=\"text\" className=\"drawer__add_remove\" onClick={() => this.removeField(fieldName)}>\n                            <MinusCircleOutlined />\n                        </Button>\n                    </Form.Item>\n                )\n            }\n\n            return null\n        })\n\n        Object.keys(runDetails).map(fieldName => {\n            if (mandatory_fields.includes(fieldName) === false) {\n                let fieldValue = runDetails[fieldName]\n\n                fields.push(\n                    <Form.Item {...layout} label={fieldName} key={fieldName} >\n                        <Form.Item noStyle name={fieldName} initialValue={fieldValue}>\n                            <Input style={{ width: '90%' }} />\n                        </Form.Item>\n                        <Button style={{width: '32px'}} type=\"text\" className=\"drawer__add_remove\" onClick={() => this.removeField(fieldName)}>\n                            <MinusCircleOutlined />\n                        </Button>\n                    </Form.Item>\n                )\n            }\n            return null\n        })\n\n        return fields\n    }\n\n    addField = () => {\n        const newField = {};\n        newField[this.state.newFieldName] = this.state.newFieldValue\n        \n        this.setState({\n            'runDetails': {...this.state.runDetails, ...newField},\n            'newFieldName': '',\n            'newFieldValue': ''\n        })\n    }\n\n    newField = () => {\n        const layout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 16 },\n        }\n\n        let buttonActivated = false;\n        if (this.state.newFieldName === '' || this.state.newFieldValue === '') {\n            buttonActivated = true;\n        }\n\n        return (\n            <Input.Group {...layout}>\n                <Row gutter={19}>\n                    <Col span={4}>\n                        <Input value={this.state.newFieldName} onChange={(e) => this.changeInput(e, 'newFieldName')} />\n                    </Col>\n                    <Col span={15}>\n                    <Input value={this.state.newFieldValue} onChange={(e) => this.changeInput(e, 'newFieldValue')} />\n                    </Col>\n                    <Button disabled={buttonActivated} type=\"text\" className=\"drawer__add_remove\" onClick={this.addField}>\n                        <PlusCircleOutlined />\n                    </Button>\n                </Row>\n            </Input.Group>\n        )\n    }\n\n    onValuesChange = (values) => {\n        this.setState({\n            'runDetails': {...this.state.runDetails, ...values}\n          })\n    }\n\n    changeInput = (e, field) => {\n        let newState = {};\n        newState[field] = e.target.value;\n        this.setState({...newState})\n    }\n\n    render() {\n        const fields = this.generateField();\n\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n\n        if (this.props.visible) {\n            return (\n                <Drawer\n                    className='run-details'\n                    title=\"Run Details\"\n                    width={720}\n                    onClose={this.onCancel}\n                    visible={this.props.visible}\n                    bodyStyle={{ paddingBottom: 80 }}\n                    footer={\n                        <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                        >\n                        <Button onClick={this.onCancel} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.onUpdate} type=\"primary\">\n                            Update\n                        </Button>\n                        </div>\n                    }>\n                        <Form\n                            {...formItemLayoutWithOutLabel}\n                            onValuesChange={this.onValuesChange}\n                            >\n                            {fields}\n                            {this.newField()}\n                        </Form>\n                </Drawer>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default RunDetails;","export const getModelName = (models, modelId) => {\n    const model = models.filter(x => x.model_id === modelId)[0];\n    \n    if (model === undefined) {\n        return modelId;\n    } else {\n        return model.model_name || modelId;\n    }\n\n}","import React, { Component } from 'react';\nimport { Breadcrumb, Table, Button, Menu, Dropdown, Divider, Modal } from 'antd';\nimport { connect } from \"react-redux\";\nimport { redirect } from '../../lib/util/navigation';\nimport * as actions from './../../modules/runs/actions';\nimport * as actions_models from './../../modules/models/actions';\nimport * as dashboard_actions from '../../modules/dashboards/actions';\nimport './Runs.scss';\nimport { PageContainerHOC } from '../../components/PageContainer/PageContainerHOC';\nimport RunDetails from './Components/RunDetails/RunDetails';\nimport * as moment from 'moment';\nimport { getModelName } from '../../lib/util/util';\n\nconst { Item } = Menu;\n\nconst mapStateToProps = state => {\n    return { \n        runs: state.runs,\n        models: state.models.value,\n        dashboards: state.dashboards\n    };\n};\n\n\n\nclass Runs extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            selectedRows: [],\n            runDetailsVisible: false,\n            runDetails: {},\n            archivedRuns: false,\n            runsToDelete: [],\n            runsToDeleteConfirm: false\n        }\n    }\n\n    componentDidMount() {\n        const modelId = this.props.match.params.modelId;\n        const payload = {\n            params: {\n                modelId: modelId\n            }\n        }\n        \n        window.__store.dispatch(actions.getRuns.submit(payload));\n        window.__store.dispatch(actions_models.getModels.submit(payload));\n    }\n\n    onClickArchive = (e, record) => {\n        e.domEvent.stopPropagation()\n\n        let rows = [];\n        if (this.state.selectedRows.length > 0) {\n            rows = this.state.selectedRows\n        } else {\n            rows = [record]\n        }\n        \n        const modelId = this.props.match.params.modelId;\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {\n                runs: rows\n            }\n        }\n\n        window.__store.dispatch(actions.archiveRuns.submit(payload));\n    }\n\n    onClickUnarchive = (e, record) => {\n        e.domEvent.stopPropagation()\n\n        let rows = [];\n        if (this.state.selectedRows.length > 0) {\n            rows = this.state.selectedRows\n        } else {\n            rows = [record]\n        }\n        \n        const modelId = this.props.match.params.modelId;\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {\n                runs: rows\n            }\n        }\n\n        window.__store.dispatch(actions.unarchiveRuns.submit(payload));\n    }\n\n    onClickDelete = (e, record) => {\n        e.domEvent.stopPropagation()\n\n        let rows = [];\n        if (this.state.selectedRows.length > 0) {\n            rows = this.state.selectedRows\n        } else {\n            rows = [record]\n        }\n        \n        this.setState({\n            'runsToDeleteConfirm': true,\n            'runsToDelete': rows\n        })\n    }\n\n    createContextMenu = (row) => {\n        if (this.state.archivedRuns) {\n            return (\n                <Menu>\n                    <Item key=\"archive\" onClick={(e) => this.onClickUnarchive(e, row)}>Make Active</Item>\n                    <Item key=\"active\" onClick={(e) => this.onClickDelete(e, row)}>Delete</Item>\n  \n                </Menu>\n            )\n        } else {\n            return (\n                <Menu>\n                    <Item key=\"archive\" onClick={(e) => this.onClickArchive(e, row)}>Archive</Item>\n                </Menu>\n            )\n        }   \n    }\n\n    startTensorboard = () => {\n        const modelId = this.props.match.params.modelId;\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {\n                runs: this.state.selectedRows.map(x => {return {\n                    'path': x.path,\n                    'name': x.model_version !== '' ? x.model_version + '/' + x.run_id : x.run_id\n                }}),\n                model_id: modelId\n            }\n        }\n        \n        window.__store.dispatch(dashboard_actions.createDashboard.submit(payload));\n    }\n\n    onChangeSelectedRows = (selectedRowKeys, selectedRows) => {\n        this.setState({'selectedRows': selectedRows})\n    }\n    \n    getCheckboxProps = (record) => {\n        return {\n            model_name: record.model_name,\n            version_name: record.version_name,\n            run_id: record.run_id,\n        }\n    }\n\n    changeRunDetailsVisible = (value) => {\n        this.setState({'runDetailsVisible': value});\n    }\n    \n    onClickRow = (row) => {\n        this.setState({\n            'runDetailsVisible': true,\n            'runDetails': row\n    });\n    }\n\n    onClickRunType = (value) => {\n        this.setState({\n            'archivedRuns': value\n        })\n    }\n    \n    onStartCancelRuns = () => {\n        this.setState({\n            runsToDeleteConfirm: false,\n            runsToDelete: []\n        })\n    }\n\n    onDeleteRuns = () => {\n        const modelId = this.props.match.params.modelId;\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {\n                runs: this.state.runsToDelete\n            }\n        }\n        window.__store.dispatch(actions.deleteRuns.submit(payload));\n\n        this.setState({\n            runsToDeleteConfirm: false,\n            runsToDelete: []\n        });\n    }\n\n    renderTableRow = (value, row) => {\n        return (\n            <Dropdown overlay={this.createContextMenu(row)} trigger={[`contextMenu`]}>\n                <div>{value}</div>\n            </Dropdown>\n        )\n    }\n\n    createTableColums = (table_data) => {\n        let columns = [\n            {\n                title: 'Created at',\n                dataIndex: 'created_at',\n                key: 'created_at',\n                defaultSortOrder: 'descend',\n                sorter: (a, b) => a.created_at > b.created_at,\n                render: (value, row) => this.renderTableRow(`${moment(value).format('Do MMM YY, HH:mm:ss')}`, row),\n            },\n            {\n              title: 'Model Version',\n              dataIndex: 'model_version',\n              key: 'model_version',\n              sorter: (a, b) => a.model_version > b.model_version,\n              render: (value, row) => this.renderTableRow(value, row),\n            },\n            {\n              title: 'Run ID',\n              dataIndex: 'run_id',\n              key: 'run_id',\n              render: (value, row) => this.renderTableRow(value, row),\n            },\n        ];\n\n        const mandatoryFields = ['model_name', 'model_version', 'path', 'run_id', 'created_at', 'key', 'archived'];\n        let newFields = Object.keys(table_data.reduce(function(result, obj) {\n            return Object.assign(result, obj);\n        }, {})).filter(x => mandatoryFields.includes(x) === false).map(fieldName => {\n            return {\n                    title: fieldName,\n                    dataIndex: fieldName,\n                    key: fieldName,\n                    //defaultSortOrder: 'descend',\n                    sorter: (a, b) => a[fieldName] > b[fieldName],\n                    render: (value, row) => this.renderTableRow(value, row),\n                }\n        })\n\n        columns = columns.concat(newFields)\n        return columns;\n    }\n\n    render() {\n        const modelID = this.props.match.params.modelId;\n        const modelName = getModelName(this.props.models, modelID);\n        const table_data = this.props.runs.value.map(x => {return {...x, key: x.model_name + x.model_version + x.run_id}})\n                                                .filter(x => x.archived === this.state.archivedRuns)\n        const columns = this.createTableColums(table_data)\n        \n        return (\n            <div className=\"runs-page\">\n                <div className='runs-header'>\n                    <Breadcrumb className=\"page-breadcrumb\">\n                        <Breadcrumb.Item onClick={() => {redirect('/runs')}}>Runs</Breadcrumb.Item>\n                        <Breadcrumb.Item>{modelName}</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n                <div className='runs-selector'>\n                    <span onClick={() => this.onClickRunType(false)} className={this.state.archivedRuns ? '' : 'selected'}>Active Runs</span>\n                    <Divider type=\"vertical\" />\n                    <span onClick={() => this.onClickRunType(true)} className={this.state.archivedRuns ? 'selected' : ''}>Archived Runs</span>\n                </div>\n                <div className=\"site-layout-content\">\n                    <div  className=\"fixed-widget\">\n                        <Button\n                            type=\"primary\"\n                            onClick={this.startTensorboard}\n                            disabled={this.state.selectedRows.length === 0}\n                            loading={this.props.dashboards.pending}>\n                            Start Tensorboard\n                        </Button></div>\n\n                        <Table\n                            onRow={(record, rowIndex) => {\n                                return {\n                                onClick: event => {this.onClickRow(record)}\n                                };\n                            }}\n                            loading={this.props.runs.pending}\n                            rowSelection={{\n                                onChange: this.onChangeSelectedRows,\n                                getCheckboxProps: this.getCheckboxProps,\n                            }}\n                            dataSource={table_data}\n                            columns={columns}\n                            style={{'width': '100%'}}\n                            pagination={{ defaultPageSize: 50 }}\n                            scroll={{x: true}}\n                            size=\"small\"\n                            />\n                        {this.state.runDetailsVisible ? <RunDetails \n                            visible={this.state.runDetailsVisible}\n                            changeRunDetailsVisible={this.changeRunDetailsVisible}\n                            runDetails={this.state.runDetails}\n                            modelId={this.props.match.params.modelId}\n                        /> : null}\n                        {this.state.runsToDeleteConfirm ? <Modal\n                            title=\"Delete runs\"\n                            visible={this.state.runsToDeleteConfirm}\n                            onOk={this.onDeleteRuns}\n                            onCancel={this.onStartCancelRuns}\n                            okText=\"Delete runs\"\n                            cancelText=\"Cancel\"\n                            >\n                            <p>Are you sure you want to delete {this.state.runsToDelete.length} run{this.state.runsToDelete.length > 1 ? 's': ''}?</p>\n                            </Modal> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(PageContainerHOC(Runs));","import {networkActionCreators} from '../../lib/util/redux'\n\nexport const GET_DOCUMENTATION = '[DOCUMENTATION] GET_DOCUMENTATION'\nexport const POST_DOCUMENTATION = '[DOCUMENTATION] POST_DOCUMENTATION'\n\nexport const getDocumentation = networkActionCreators(GET_DOCUMENTATION)\nexport const postDocumentation = networkActionCreators(POST_DOCUMENTATION)","import React, { Component } from 'react';\nimport { Tabs, Modal, Input } from 'antd';\nimport BraftEditor from 'braft-editor';\nimport './DocumentationTabs.scss';\n\nconst { TabPane } = Tabs;\n\nclass DocumentationTabs extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            addingTab: false,\n            titleNewTab: '',\n            deleteTab: false,\n            tabToDelete: null\n        }\n    }\n    \n    onEdit = (targetKey, action) => {\n        if (action === 'add') {\n            this.add(targetKey);\n        } else if (action === 'remove') {\n            this.remove(targetKey);\n        }\n\n        this[action](targetKey);\n    };\n\n    onChangeTitleTab = (e) => {\n        this.setState({'titleNewTab': e.target.value});\n    }\n\n    add = () => {\n        this.setState({addingTab: true});\n    }\n    \n    submitNewTab = () => {\n        this.props.addTab(this.state.titleNewTab);\n        this.setState({addingTab: false});\n    }\n\n    submitDeleteTab = () => {\n        this.props.deleteTab(this.state.tabToDelete);\n        this.setState({deleteTab: false});\n    }\n\n    onCancelDeleteTab = () => {\n        this.setState({\n            deleteTab: false,\n            titleNewTab: ''\n        })\n    }\n\n    remove = targetKey => {\n        this.setState({\n            deleteTab: true,\n            tabToDelete: targetKey\n        })\n    };\n    \n    render() {\n        let activeKey = this.props.activeKey;\n        if (activeKey === null && this.props.panes.length > 0) {\n            activeKey = this.props.panes[0].key\n        }\n\n        let deletePaneTitle = null;\n        if (this.props.panes.filter(x => x.key === this.state.tabToDelete).length > 0) {\n            deletePaneTitle = this.props.panes.filter(x => x.key === this.state.tabToDelete)[0].title\n        }\n\n        return (\n            <div className='documentation-tabs'>\n                <Tabs\n                    type=\"editable-card\"\n                    onChange={this.props.onChangeTab}\n                    activeKey={activeKey}\n                    onEdit={this.onEdit}\n                >\n                    {this.props.panes.map(pane => (\n                    <TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n                        { this.props.editorOpen ? <BraftEditor\n                            media={{image: true, video: false, audio:false, accepts: {video: false, audio: false}}}\n                            excludeControls={['letter-spacing', 'fullscreen', 'clear']}\n                            language=\"en\"\n                            //value={BraftEditor.createEditorState(pane.content)}\n                            onChange={this.props.handleTabChange}\n                        /> : <BraftEditor\n                        readOnly={true}\n                        controls={[]}\n                        value={BraftEditor.createEditorState(pane.content)}\n                        defaultValue={BraftEditor.createEditorState(pane.content)}\n                    />}\n                    </TabPane>\n                    ))}\n                </Tabs>\n                <Modal title=\"Adding new tab\"\n                       visible={this.state.addingTab}\n                       onOk={this.submitNewTab}\n                       onCancel={this.onCancelNewTab}>\n                    <Input placeholder='Name of tab'\n                           value={this.state.titleNewTab}\n                           onChange={this.onChangeTitleTab}/>\n                </Modal>\n                <Modal title=\"Delete Tab\"\n                       visible={this.state.deleteTab}\n                       onOk={this.submitDeleteTab}\n                       onCancel={this.onCancelDeleteTab}\n                       okText=\"Delete Tab\"\n                       cancelText=\"Cancel\">\n                        Are you sure you want to delete `{deletePaneTitle}` ?\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default DocumentationTabs;","import React, { Component } from 'react';\nimport { Breadcrumb, Button } from 'antd';\nimport { connect } from \"react-redux\";\n//import { redirect } from '../../lib/util/navigation';\nimport BraftEditor from 'braft-editor';\nimport * as actions from './../../modules/documentation/actions'\nimport DocumentationTabs from './Components/DocumentationTabs';\nimport 'braft-editor/dist/index.css';\nimport './Documentation.scss';\nimport { PageContainerHOC } from '../../components/PageContainer/PageContainerHOC';\nimport { redirect } from '../../lib/util/navigation';\n\nconst mapStateToProps = state => {\n    return { \n        documentation: state.documentation,\n        models: state.models.value\n    };\n};\n\nclass Documentation extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            editorOpen: false,\n            documentationSummary: null,\n            activeTabKey: null,\n            documentationPanes: []\n        }\n    }\n\n    componentDidUpdate(nextProps) {\n        const documentationSummary = this.props.documentation.value.documentation_summary;\n        const nextDocumentationSummary = nextProps.documentation.value.documentation_summary;\n        \n        const documentationPanes = this.props.documentation.value.documentation_panes;\n        const nextDocumentationPanes = nextProps.documentation.value.documentation_panes;\n        \n        if (nextDocumentationSummary !== documentationSummary) {\n            this.setState({ documentationSummary })\n        }\n        if (nextDocumentationPanes !== documentationPanes) {\n            this.setState({ documentationPanes })\n        }\n    }\n    \n    redirectDocumentation = () => {\n        redirect('/documentation')\n    }\n\n    componentDidMount() {\n        const payload = {\n            'params': {\n                'modelId': this.props.match.params.modelId\n            }\n        }\n        window.__store.dispatch(actions.getDocumentation.submit(payload));\n    }\n\n    submitContent = () => {\n        this.setState({'editorOpen': !this.state.editorOpen});\n\n        const payload = {\n            'params': {\n                'modelId': this.props.match.params.modelId\n            },\n            'payload': {\n                documentation_summary: this.state.documentationSummary,\n                documentation_panes: this.state.documentationPanes\n            }\n        }\n        window.__store.dispatch(actions.postDocumentation.submit(payload));\n    }\n\n    handleSummaryChange = (editorState) => {\n        if (this.state.documentationSummary !== editorState.toHTML()) {\n            this.setState({ 'documentationSummary': editorState.toHTML() });\n        }\n    }\n    \n    handleTabChange = (editorState) => {\n        const activeTabKey = this.state.activeTabKey;\n        const newDocumentationPanes = this.state.documentationPanes;\n        let updatePanes = false;\n\n        newDocumentationPanes.forEach((pane, i) => {\n            if (pane.key === activeTabKey && pane.content !== editorState.toHTML()) {\n                pane.content = editorState.toHTML()\n                updatePanes = true;\n            }\n        });\n        if (updatePanes) {\n            this.setState({\n                'documentationPanes': newDocumentationPanes\n            })\n        }\n        \n    }\n\n    onOpenEditor = () => {\n        this.setState({'editorOpen': true});\n    }\n\n    onCloseEditor = () => {\n        this.setState({'editorOpen': false});\n    }\n\n    onChangeTab = (activeKey) => {\n        this.setState({ 'activeTabKey': activeKey });\n    }\n    \n    addTab = (titleNewTab) => {\n        const { documentationPanes } = this.state;\n        const activeKey = `${documentationPanes.length + 1}`;\n        const newPanes = [...documentationPanes];\n        newPanes.push({ title: titleNewTab, content: '', key: activeKey});\n        \n        this.setState({\n            'documentationPanes': newPanes,\n            'activeTabKey': activeKey\n        });\n    }\n\n    deleteTab = (tabDeleteKey) => {\n        const { documentationPanes } = this.state;\n        const newDocumentationPanes = documentationPanes.filter(x => x.key !== tabDeleteKey);\n\n        const payload = {\n            'params': {\n                'modelId': this.props.match.params.modelId\n            },\n            'payload': {\n                documentation_summary: this.state.documentationSummary,\n                documentation_panes: newDocumentationPanes\n            }\n        }\n        window.__store.dispatch(actions.postDocumentation.submit(payload));\n    }\n\n    getSelectedPane = (panes, activeKey) => {\n        const selected_pane = panes.filter(pane => pane.key === activeKey);\n        \n        if (selected_pane.length === 1) {\n            return selected_pane[0]\n        } else {\n            return null\n        }\n    }\n    \n    render() {\n        const modelId = this.props.match.params.modelId;\n        const editorOpen = this.state.editorOpen;\n        const documentation_summary = this.state.documentationSummary;\n        const documentation_panes = this.state.documentationPanes;\n        \n        const modelName = this.props.documentation.value.documentation_metadata.model_name || modelId;\n\n        return (\n            <div className='documentation'>\n                <div className='documentation-header'>\n                    <Breadcrumb className=\"page-breadcrumb\">\n                        <Breadcrumb.Item onClick={this.redirectDocumentation}>Documentation</Breadcrumb.Item>\n                        <Breadcrumb.Item>{modelName}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    {editorOpen ? <Button type=\"primary\" onClick={this.submitContent}>Save</Button> : <Button type=\"primary\" onClick={this.onOpenEditor}>Edit</Button>}\n                </div>\n                <div className=\"documentation-summary\">\n                    <h3 style={{'paddingLeft': '15px', 'paddingTop': '5px'}}><b>Model summary</b></h3>\n                { editorOpen ? <BraftEditor\n                    media={{image: true, video: false, audio:false, accepts: {video: false, audio: false}}}\n                    excludeControls={['letter-spacing', 'fullscreen', 'clear']}\n                    language=\"en\"\n                    //value={BraftEditor.createEditorState(documentation_summary)}\n                    onChange={this.handleSummaryChange}\n                /> : <BraftEditor\n                        readOnly={true}\n                        controls={[]}\n                        value={BraftEditor.createEditorState(documentation_summary)}\n                />\n                }\n                </div>\n                <DocumentationTabs \n                    panes={documentation_panes}\n                    activeKey={this.state.activeTabKey}\n                    editorOpen={this.state.editorOpen}\n                    handleTabChange={this.handleTabChange}\n                    addTab={this.addTab}\n                    deleteTab={this.deleteTab}\n                    onChangeTab={this.onChangeTab}/>\n                <div className=\"documentation-footer\">\n                {editorOpen ? <Button type=\"primary\" onClick={this.submitContent}>Save</Button> : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(PageContainerHOC(Documentation));\n","import React, { Component } from 'react';\nimport { Result, Button } from 'antd';\nimport { connect } from \"react-redux\";\nimport * as dashboard_actions from '../../modules/dashboards/actions';\nimport './Dashboard.scss';\nimport { PageContainerHOC } from '../../components/PageContainer/PageContainerHOC';\nimport { redirect } from '../../lib/util/navigation';\n\nconst mapStateToProps = state => {\n    return { \n        runs: state.runs,\n        models: state.models,\n        dashboards: state.dashboards\n    };\n};\n\nclass Dashboard extends Component {\n   componentDidMount() {\n        const payload = {\n            params: {}\n        }\n\n        window.__store.dispatch(dashboard_actions.getDashboards.submit(payload));\n    }\n\n    onClickReturnToDashboard = () => {\n        redirect('/dashboards')\n    }\n\n    render() {\n        const dashboard = this.props.dashboards.value.filter(x => x.dashboard_id === this.props.match.params.dashboardId);\n\n        let path = null;\n        let dashboardNotFound = false;\n        if (dashboard.length > 0) {\n            path= dashboard[0].path\n        } else {\n            dashboardNotFound = true\n        }\n\n        if (dashboardNotFound) {\n            return (\n                <div className=\"dashboard-page\">\n                    <div className=\"dashboard__missing\">\n                        <Result\n                            title=\"Dashboard does not exist\"\n                            extra={\n                            <Button key=\"return\" type=\"primary\" onClick={() => this.onClickReturnToDashboard()}>\n                                Go to dashboards\n                            </Button>\n                            }\n                        />\n                    </div>\n                </div>\n                \n            )\n        } else {\n            return (\n                <div className=\"dashboard-page\">\n                    <iframe title='tensorbard-dashboard' src={path} />\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default connect(mapStateToProps)(PageContainerHOC(Dashboard));\n","import React, { Component } from 'react';\nimport { Breadcrumb, Table, Button, Popconfirm } from 'antd';\nimport { connect } from \"react-redux\";\nimport * as moment from 'moment';\nimport { PageContainerHOC } from '../../components/PageContainer/PageContainerHOC';\nimport { redirect } from '../../lib/util/navigation';\nimport { getModelName } from '../../lib/util/util';\nimport * as dashboard_actions from '../../modules/dashboards/actions';\nimport * as model_actions from '../../modules/models/actions';\nimport './DashboardList.scss';\n\nconst mapStateToProps = state => {\n    return { \n        dashboards: state.dashboards,\n        models: state.models.value\n    };\n};\n\nclass DashboardList extends Component {\n    componentDidMount() {\n        const payload = {\n            params: {}\n        }\n        window.__store.dispatch(model_actions.getModels.submit(payload));\n        window.__store.dispatch(dashboard_actions.getDashboards.submit(payload));\n    }\n\n    redirectDashboards = () => {\n        redirect('/dashboards');\n    }\n\n    onOpenDashboard = (dashboard_id) => {\n        redirect(`/dashboards/${dashboard_id}`);\n    }\n\n    stopDashboard = (dashboard_id) => {\n        const payload = {\n            params: {},\n            payload: {\n                dashboardId: dashboard_id\n            }\n        }\n        window.__store.dispatch(dashboard_actions.stopDashboard.submit(payload));\n    }\n\n    cancel = () => {\n        \n    }\n\n    render() {\n        const table_data = this.props.dashboards.value.map(x => {return {...x, key: x.dashboard_id, model_name: getModelName(this.props.models, x.model_id)}})\n        \n        const columns = [\n            {\n              title: 'Created At',\n              dataIndex: 'created_at',\n              key: 'created_at',\n              defaultSortOrder: 'descend',\n              render: name => `${moment(name.created_at).format('LLL')}`,\n              sorter: (a, b) => a.created_at > b.created_at,\n            },\n            {\n                title: 'Model Name',\n                dataIndex: 'model_name',\n                key: 'model_name',\n                //defaultSortOrder: 'descend',\n                sorter: (a, b) => a.model_name > b.model_name,\n            },\n            {\n                title: '',\n                key: 'action',\n                width: 250,\n                render: (text, record) => (\n                  <span style={{display: 'flex'}}>\n                    <Button style={{'marginRight': '10px'}} onClick={() => this.onOpenDashboard(record.dashboard_id)}>Open Dashboard</Button>\n                    <Popconfirm\n                        title=\"Are you sure stop this dashboard?\"\n                        onConfirm={() => this.stopDashboard(record.dashboard_id)}\n                        onCancel={this.cancel}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"danger\" >Stop</Button>\n                    </Popconfirm>\n                </span>\n                ),\n              }\n        ];\n\n        return (\n            <div className=\"dashboards-page\">\n                <div className='dashboards-header'>\n                    <Breadcrumb className=\"page-breadcrumb\">\n                        <Breadcrumb.Item onClick={this.redirectDashboards}>Dashboards</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n                <div className=\"site-layout-content\">\n                    <Table\n                        loading={this.props.dashboards.pending}\n                        // rowSelection={rowSelection}\n                        dataSource={table_data}\n                        columns={columns}\n                        style={{'width': '100%'}}\n                        pagination={{ pageSize: 50 }}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(PageContainerHOC(DashboardList));\n","import React, { Component } from 'react';\nimport { Card, Modal, Button, Form, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport * as actions from './../../../../modules/models/actions'\nimport './AddModel.scss';\nimport { uuid } from 'uuidv4';\n\nconst { Meta } = Card;\n\nclass AddModel extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            isModalVisible: false,\n            modal_values: {\n                'model_name': '',\n                'path': '',\n                'description': ''\n            }\n        }\n    }\n\n    onClickAddModel = () => {\n        this.setState({isModalVisible: true});\n    }\n\n    handleCancel = () => {\n        this.setState({isModalVisible: false})\n    }\n\n    handleOk = () => {\n        const modelId = uuid();\n\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {...this.state.modal_values, model_id: modelId}\n        }\n        window.__store.dispatch(actions.addEditModel.submit(payload));\n        this.setState({\n            isModalVisible: false,\n            modal_values: {\n                'model_name': '',\n                'path': '',\n                'description': ''\n            }\n        })\n    }\n\n    onValuesChange = (values) => {\n        this.setState({\n          'modal_values': {...this.state.modal_values, ...values}\n        })  \n    }\n    \n    render() {\n        const layout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 16 },\n        };\n        const loading = false;\n        \n        return (\n            <>\n                <Card\n                    key={'add-model'}\n                    style={{ width: 300 }}\n                    className=\"card\"\n                    actions={[\n                        <PlusOutlined key=\"add-model\" onClick={() => this.onClickAddModel()}/>,\n                    ]}\n                    >\n                    <Meta\n                        title={'New model'}\n                        description={'You can add any model being tracked using Tensorboard'}\n                    />\n                </Card>\n                <Modal\n                    title={\"Add new model\"}\n                    visible={this.state.isModalVisible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={this.handleCancel}>\n                            Cancel\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                            Submit\n                        </Button>,\n                    ]}>\n                    <Form\n                        {...layout}\n                        name='basic'\n                        onValuesChange={this.onValuesChange}\n                    >\n                        <Form.Item label=\"model_name\" name='model_name'>\n                            <Input placeholder=\"Model name\" />\n                        </Form.Item>\n                        <Form.Item label=\"path\" name='path'>\n                            <Input placeholder=\"Path of tensorboard runs, example: /path/mnist_model/logs/{model_version}\" />\n                        </Form.Item>\n                        <Form.Item label=\"Description\" name='description'>\n                            <Input placeholder=\"Model description\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n      )\n  }\n}\n\nexport default AddModel;","import React, { Component } from 'react';\nimport { Modal, Button, Form, Input, Collapse, Popconfirm } from 'antd';\nimport * as actions from './../../../../modules/models/actions'\nimport { connect } from \"react-redux\";\nimport './EditModal.scss';\n\nconst { Panel } = Collapse;\n\nconst mapStateToProps = state => {\n    return { \n        models: state.models.value\n    };\n};\n\nclass EditModal extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            'model_id': this.props.model_id,\n            modal_values: {\n                'model_name': '',\n                'path': '',\n                'description': ''\n            }\n        }\n    }\n    \n    componentWillUpdate(nextProps) {\n        if (nextProps.model_id !== this.props.model_id) {\n            const modelMetadata = nextProps.models.filter(x => x.model_id === nextProps.model_id)[0];\n            this.setState({\n                'model_id': nextProps.model_id,\n                'modal_values': modelMetadata\n            })\n        }\n    }\n\n    cancelDeleteModel = () => {\n    }\n\n    deleteModel = () => {\n        const payload = {\n            params: {\n                modelId: this.state.model_id\n            },\n        }\n        window.__store.dispatch(actions.deleteModel.submit(payload));\n        \n        // Reset state\n        this.props.handleOk()\n    }\n\n    handleOk = () => {\n        const modelId = this.state.model_id;\n        const payload = {\n            params: {\n                modelId: modelId\n            },\n            payload: {...this.state.modal_values, model_id: modelId}\n        }\n        window.__store.dispatch(actions.addEditModel.submit(payload));\n        this.props.handleOk();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            'model_id': '',\n            'modal_values': {\n                'model_name': '',\n                'path': '',\n                'description': ''\n            }\n        })\n\n        this.props.handleCancel()\n    }\n\n    onValuesChange = (values) => {\n        this.setState({\n          'modal_values': {...this.state.modal_values, ...values}\n        })  \n    }\n    \n    render() {\n        const layout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 16 },\n        };\n        const loading = false;\n\n        if (this.props.isEditModalVisible) {\n            return (\n                <>\n                    )\n                    <Modal\n                        title={\"Edit \"}\n                        className=\"model__edit_model\"\n                        visible={this.props.isEditModalVisible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        footer={[\n                            <Button key=\"back\" onClick={this.handleCancel}>\n                                Cancel\n                            </Button>,\n                            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                                Submit\n                            </Button>,\n                        ]}>\n                        <Form\n                            {...layout}\n                            name='basic'\n                            onValuesChange={this.onValuesChange}\n                            initialValues={\n                                {...this.props.modelMetadata}\n                            }\n                        >\n                            <Form.Item label=\"Model Name\" name='model_name' >\n                                <Input placeholder=\"input placeholder\"/>\n                            </Form.Item>\n                            <Form.Item label=\"Description\" name='description'>\n                                <Input placeholder=\"Model description\" />\n                            </Form.Item>\n                            <Form.Item label=\"Path\" name='path'>\n                                <Input placeholder=\"Path for Tensorboard runs\" />\n                            </Form.Item>\n                        </Form>\n                        <Collapse defaultActiveKey={[]} ghost>\n                            <Panel header=\"Advanced\" key=\"1\">\n                                <div className=\"delete__button\">\n                                <Popconfirm\n                                    title=\"Are you sure to delete this model?\"\n                                    onConfirm={this.deleteModel}\n                                    onCancel={this.cancelDeleteModel}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <Button type=\"primary\" danger>\n                                        Delete model\n                                    </Button>\n                                </Popconfirm>\n                                    \n                                    \n                                </div>\n                            </Panel>\n                        </Collapse>\n                        \n                    </Modal>\n                </>\n            )\n        } else {return (<></>)}\n  }\n}\n\nexport default connect(mapStateToProps)(EditModal);","import React, { Component } from 'react';\nimport { Breadcrumb, Card } from 'antd';\nimport { EditOutlined, LineChartOutlined, FileSearchOutlined } from '@ant-design/icons';\nimport { connect } from \"react-redux\";\nimport { redirect } from '../../lib/util/navigation';\nimport * as actions from './../../modules/models/actions'\nimport './Models.scss';\nimport AddModel from './Components/AddModel/AddModel';\nimport EditModal from './Components/EditModal/EditModal';\nimport { PageContainerHOC } from '../../components/PageContainer/PageContainerHOC';\n\nconst { Meta } = Card;\n\nconst mapStateToProps = state => {\n  return { \n      models: state.models\n  };\n};\n\nclass Models extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        isEditModalVisible: false,\n        model_id: '',\n        modal_values: {}\n    }\n  }\n\n  componentDidMount() {\n    window.__store.dispatch(actions.getModels.submit());\n  }\n\n  onClickExperiments = (model_id) => {\n    redirect(`/runs/${model_id}`);\n  }\n\n  onClickDocumentation = (model_id) => {\n    redirect(`/documentation/${model_id}`);\n  }\n\n  handleOk = () => {\n    this.setState({\n      'isEditModalVisible': false\n    })\n  }\n\n  handleCancel = () => {\n    this.setState({\n      'isEditModalVisible': false\n    })\n  }\n\n  handleOk = () => {\n    this.setState({\n      'isEditModalVisible': false\n    })\n  }\n\n  onClickEdit = (model_id) => {\n    this.setState({\n      'isEditModalVisible': true,\n      'model_id': model_id\n    })\n  }\n\n  onValuesChange = (values) => {\n    this.setState({\n      'modal_values': {...this.state.modal_values, ...values}\n    })  \n  }\n\n  render() {\n      const models = this.props.models.value;\n      const pathname = this.props.location.pathname.substring(1);\n      \n      return (\n        <div className=\"home-page\">\n          <Breadcrumb className=\"page-breadcrumb\">\n              <Breadcrumb.Item style={{'textTransform': 'capitalize'}}>{pathname}</Breadcrumb.Item>\n          </Breadcrumb>\n          <div className=\"projects__wrapper\">\n            <div className=\"projects\">\n              {models.map((project, index) => {\n                const model_name = project.model_name || project.model_id;\n                const model_id = project.model_id;\n\n                let actions = [];\n                if (pathname === 'documentation') {\n                  actions = [\n                    <div onClick={() => this.onClickDocumentation(model_id)}><FileSearchOutlined key='documentation'/> View documentation</div>,\n                    <EditOutlined key=\"edit\" onClick={() => this.onClickEdit(project.model_id)}/>,\n                  ]\n                } else if (pathname === 'runs') {\n                  actions = [\n                    <div onClick={() => this.onClickExperiments(model_id)}><LineChartOutlined key=\"dashboard\"/> View runs</div>,\n                    <EditOutlined key=\"edit\" onClick={() => this.onClickEdit(project.model_id)}/>,\n                  ]\n                }\n\n                return (\n                  <Card\n                    key={index}\n                    style={{ width: 300 }}\n                    className=\"card card__model\"\n                    actions={actions}\n                  >\n                    <Meta\n                      title={model_name}\n                      description={project.description || ' '}\n                    />\n                  </Card>)})}\n                  <AddModel />\n                  <EditModal\n                    handleCancel={this.handleCancel}\n                    handleOk={this.handleOk}\n                    isEditModalVisible={this.state.isEditModalVisible}\n                    model_id={this.state.model_id}\n                    modelMetadata={this.props.models.value.filter(x => x.model_id === this.state.model_id)[0]}/>\n              </div>\n          </div>\n        </div>\n      )\n  }\n}\n\nexport default connect(mapStateToProps)(PageContainerHOC(Models));","import React, { Component } from 'react';\nimport { Result, Button } from 'antd';\nimport './NotFound404.scss';\nimport { PageContainerHOC } from '../../components/PageContainer/PageContainerHOC';\nimport { redirect } from '../../lib/util/navigation';\n\nclass NotFound404 extends Component {\n    redirectToHome = () => {\n        redirect('')\n    }\n\n    render() {\n        return (\n            <div className='not-found-page'>\n                <Result\n                    status=\"404\"\n                    title=\"404\"\n                    subTitle=\"Sorry, the page you visited does not exist.\"\n                    extra={<Button type=\"primary\" onClick={this.redirectToHome}>Back Home</Button>}\n                />\n            </div>\n        )\n    }\n}\n\nexport default PageContainerHOC(NotFound404);","import Home from \"./views/Home/Home\";\nimport Runs from \"./views/Runs/Runs\";\nimport Documentation from \"./views/Documentation/Documentation\";\nimport Dashboard from \"./views/Dashboard/Dashboard\";\nimport DashboardList from \"./views/DashboardList/DashboardList\";\nimport {getBasePath} from \"./lib/util/config\";\nimport Models from \"./views/Models/Models\";\nimport NotFound404 from \"./views/NotFound404/NotFound404\";\n\nconst basePath = getBasePath();\n\nexport const routerConfig = {\n    name: 'Tensorboard Projects',\n    routes: [\n      {path: `${basePath}/`                        , exact: true, section: ''             , component: Home},\n      {path: `${basePath}/runs/`                   , exact: true, section: 'runs'         , component: Models},\n      {path: `${basePath}/runs/:modelId`           , exact: true, section: 'runs'         , component: Runs},\n      {path: `${basePath}/dashboards`              , exact: true, section: 'dashboards'   , component: DashboardList},\n      {path: `${basePath}/dashboards/:dashboardId` , exact: true, section: 'dashboards'   , component: Dashboard},\n      {path: `${basePath}/documentation/`          , exact: true, section: 'documentation', component: Models},\n      {path: `${basePath}/documentation/:modelId`  , exact: true, section: 'documentation', component: Documentation},\n      {path: `*`                                   , exact: true, section: ''             , component: NotFound404}\n    ]\n  };","import { GET_MODELS, ADD_EDIT_MODEL, DELETE_MODEL } from './actions'\nimport {networkStateReducer, reducer} from './../../lib/util/redux'\n\nconst initialStateProject = {\n    value: [],\n    defaultValue: [],\n    error: null,\n    pending: false,\n    rejected: false,\n    resolved: false\n};\n\nexport default function models(state = initialStateProject, action) {\n    state = Object.assign({}, state, networkStateReducer(GET_MODELS, state, action))\n    \n    // Add model\n    if (action.type === ADD_EDIT_MODEL + '__RESOLVED') {\n        const modelId = action.payload.model_id;\n        const payload = state.value;\n        const payload_index = payload.map(function(e) { return e.model_id; }).indexOf(modelId);\n        \n        if (payload_index !==  -1) {\n          payload[payload_index] = {...payload[payload_index], ...action.payload}\n        } else {\n          payload.push(action.payload)\n        }\n        \n        action.payload = payload;\n        state = Object.assign({}, state, networkStateReducer(ADD_EDIT_MODEL, state, action))\n    }\n\n    // Delete Model\n    if (action.type === DELETE_MODEL + '__RESOLVED') {\n      const modelId = action.payload.model_id;\n      action.payload = state.value.filter( x => x.model_id !== modelId);\n      state = Object.assign({}, state, networkStateReducer(DELETE_MODEL, state, action))\n    }\n    \n    return reducer(state, action, {})\n}","import { GET_DOCUMENTATION } from './actions'\nimport {networkStateReducer, reducer} from './../../lib/util/redux'\n\nconst initialStateDocumentation = {\n  value: {\n    'documentation_summary': '',\n    'documentation_panes': [],\n    'documentation_metadata': {'model_name': null, path: null, description: null}\n  },\n  defaultValue: [],\n  error: null,\n  pending: false,\n  rejected: false,\n  resolved: false\n};\n\nexport default function documentation(state = initialStateDocumentation, action) {\n    state = Object.assign({}, state, networkStateReducer(GET_DOCUMENTATION, state, action))\n    \n    return reducer(state, action, {})\n}","import { ARCHIVE_RUNS, UNARCHIVE_RUNS, GET_RUNS, DELETE_RUNS, EDIT_RUNS } from './actions'\nimport {networkStateReducer, reducer} from './../../lib/util/redux'\n\nconst initialStateProject = {\n    value: [],\n    defaultValue: [],\n    error: null,\n    pending: false,\n    rejected: false,\n    resolved: false\n};\n\nexport default function models(state = initialStateProject, action) {\n    state = Object.assign({}, state, networkStateReducer(GET_RUNS, state, action))\n    \n    if (action.type === ARCHIVE_RUNS + '__RESOLVED') {\n        action.payload = state.value.map(x => {\n            x['archived'] = action.payload.archived_runs.includes(x.path)\n\n            return x\n        })\n        state = Object.assign({}, state, networkStateReducer(ARCHIVE_RUNS, state, action))\n    }\n\n    if (action.type === UNARCHIVE_RUNS + '__RESOLVED') {\n        action.payload = state.value.map(x => {\n            x['archived'] = action.payload.archived_runs.includes(x.path)\n\n            return x\n        })\n        state = Object.assign({}, state, networkStateReducer(ARCHIVE_RUNS, state, action))\n    }\n\n    if (action.type === DELETE_RUNS + '__RESOLVED') {\n        action.payload = state.value.filter(x => action.payload.deleted_runs.includes(x['path']) === false)\n        state = Object.assign({}, state, networkStateReducer(DELETE_RUNS, state, action))\n    }\n\n    if (action.type === EDIT_RUNS + '__RESOLVED') {\n        const current_state_path = state.value.map(x => x['path']);\n        \n        const new_state = action.payload.edited_runs.reduce((result, run) => {\n            const run_index = current_state_path.indexOf(run['path']);\n            result[run_index] = run\n            return result\n        }, state.value);\n        \n        action.payload = new_state;\n\n        state = Object.assign({}, state, networkStateReducer(EDIT_RUNS, state, action))\n    }\n\n    return reducer(state, action, {})\n}","import { CREATE_DASHBOARD, GET_DASHBOARDS, STOP_DASHBOARD } from './actions'\nimport {networkStateReducer, reducer} from '../../lib/util/redux'\n\nconst initialStateProject = {\n    value: [],\n    defaultValue: [],\n    error: null,\n    pending: false,\n    rejected: false,\n    resolved: false\n};\n\nexport default function models(state = initialStateProject, action) {\n    state = Object.assign({}, state, networkStateReducer(GET_DASHBOARDS, state, action))\n\n    state = Object.assign({}, state, networkStateReducer(CREATE_DASHBOARD, state, action))\n    \n    state = Object.assign({}, state, networkStateReducer(STOP_DASHBOARD, state, action))\n    \n    return reducer(state, action, {})\n}","import axios from \"axios\";\nimport queryString from 'qs';\n\nexport const API_MODELS = \"API_MODELS\";\nexport const API_MODEL = \"API_MODEL\";\nexport const API_RUNS = \"API_RUNS\";\nexport const API_DOCUMENTATION = \"API_DOCUMENTATION\";\nexport const API_DASHBOARD = \"API_DASHBOARD\";\n\n\nexport const addParams = (url, params, json) => {\n    if (!params) {\n        return url\n    } else {\n        let params_filtered = params.filter( x => x['value'] !== undefined)\n        if (params_filtered.length === 0) {\n            return url\n        }\n        \n        var url_params;\n        var parameters = {};\n        for (const param of params_filtered) {\n            parameters[param['key']] = param['value']\n        }\n        url_params = url.concat('?').concat(queryString.stringify(parameters))\n        \n        return url_params\n    }\n}\n\nexport const API_CONSTANT_MAP = {\n    API_MODELS: {\n        \"url\": (params) => (`/api/models`)\n    },\n    API_MODEL: {\n        \"url\": (params) => (`/api/model/${params.modelId}`)\n    },\n    API_RUNS: {\n        \"url\": (params) => (`/api/model/${params.modelId}/runs`)\n    },\n    API_DOCUMENTATION : {\n        \"url\": (params) => (`/api/model/${params.modelId}/documentation`)\n    },\n    API_DASHBOARD : {\n        \"url\": (params) => (`/api/dashboards`)\n    },\n}\n\nvar CancelToken = axios.CancelToken;\nexport const API_CANCEL_TOKENS = Object.keys(API_CONSTANT_MAP).reduce((obj, key) => {\n    obj[key] = CancelToken.source()\n\n    return obj\n}, {})","import axios from \"axios\";\nimport {API_CONSTANT_MAP, API_CANCEL_TOKENS} from './../data_management/api_endpoints';\nimport { getApiUrl } from \"./config\";\n\nexport async function get(path, params) {\n    const payload = params ? {params} : null;\n\n    return request(path, 'GET', payload);\n}\n\nexport async function delete_req(path, params) {\n    const payload = params ? {params} : null;\n\n    return request(path, 'DELETE', payload);\n}\n\nexport async function post(path, payload) {\n    return request(path, 'POST', payload);\n}\n\nexport async function request(path, method, payload) {\n    var pathName = path.name\n    var apiConstant = API_CONSTANT_MAP[pathName]\n    var pathUrl = apiConstant.url(path['params'])\n    \n    // Create url\n    let url = getApiUrl();\n    \n    if (!url.endsWith('/')) {\n        url += '/';\n    }\n    \n    if (pathUrl.startsWith('/')) {\n        pathUrl = pathUrl.substr(1);\n    }\n    url += pathUrl;\n\n    // Build request\n    let computedConfig = {\n        method,\n        url\n      };\n    \n    // Define payload\n    if (payload && payload.data) {\n        computedConfig['data'] = payload.data;\n    }\n    if (payload && payload.params) {\n        computedConfig['params'] = payload.params;\n    }\n    \n    // Define Headers\n    if (payload && payload.json) {\n        const headers = {'Content-Type': 'application/json'};\n        computedConfig['headers'] = headers;\n    }\n    \n    // Get cancel token\n    let cancelToken = API_CANCEL_TOKENS[pathName]\n    cancelToken.cancel(`Operation cancelled by the user - path = ${pathName}`)\n    \n    // Create new cancel token\n    let newCancelToken = axios.CancelToken.source()\n    API_CANCEL_TOKENS[pathName] = newCancelToken\n    computedConfig['cancelToken'] = newCancelToken.token\n\n    // Get response\n    let result = await axios(computedConfig);\n    \n    return result\n}","import {post, get, delete_req} from './../util/request'\n\nasync function get_(path, params) {\n    const response = get(path, params)\n    return response\n}\n\nasync function delete_(path, params) {\n    console.log('delete')\n    const response = delete_req(path, params)\n    return response\n}\n\nasync function post_(path, payload) {\n    const response = post(path, {data: payload, json: true})\n    return response\n}\n\nexport function createApi(api) {\n    api.get = (path, params) => get_(path, params)\n    api.post = (path, payload) => post_(path, payload)\n    api.delete = (path, params) => delete_(path, params)\n    return api\n}","import {createApi} from './lib/data_management/api';\n\nexport const API = window.__api || createApi({\n    name      : 'Tensorboard Projects v1'\n});\n\nexport default window.__api = API;","import { API_MODELS, API_MODEL } from './../../lib/data_management/api_endpoints';  \nimport API           from \"./../../api\";\nimport * as actions  from './actions';\n\nexport async function get_models(action) {\n    const path = {\n      'name': API_MODELS\n    }\n    \n    const res = await API.get(path);\n    return res.data\n}\n\nexport async function add_model(action) {\n    var path = {\n      'name': API_MODEL,\n      'params': action.payload.params\n    }\n    \n    const payload = action.payload.payload;\n    const res = await API.post(path, payload);\n    return res.data\n}\n\nexport async function delete_model(action) {\n    var path = {\n      'name': API_MODEL,\n      'params': action.payload.params\n    }\n    \n    const res = await API.delete(path, null);\n    return res.data\n}\n\nconst modelsMiddleware = {\n    \"[MODELS] GET_MODELS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await get_models(action)\n            store.dispatch(actions.getModels.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.getModels.rejected(error));\n        }\n    },\n    \"[MODELS] ADD_OR_EDIT_MODEL__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await add_model(action)\n            store.dispatch(actions.addEditModel.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.addEditModel.rejected(error));\n        }\n    },\n    \"[MODELS] DELETE_MODEL__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await delete_model(action)\n            store.dispatch(actions.deleteModel.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.deleteModel.rejected(error));\n        }\n    }\n}\n\nexport default modelsMiddleware;","import { API_DOCUMENTATION } from './../../lib/data_management/api_endpoints';  \nimport API           from \"./../../api\";\nimport * as actions  from './actions';\n\nexport async function get_model_documentation(action) {\n    var path = {\n      'name': API_DOCUMENTATION,\n      'params': {\n        'modelId': action.payload.params.modelId,\n      }\n    }\n    \n    var res = await API.get(path);\n    return res.data\n}\n\nexport async function post_model_documentation(action) {\n    const path = {\n      'name': API_DOCUMENTATION,\n      'params': {\n        'modelId': action.payload.params.modelId,\n      }\n    }\n    const payload = action.payload.payload;\n    \n    const res = await API.post(path, payload);\n    return res.data\n}\n\nconst documentationMiddleware = {\n    \"[DOCUMENTATION] GET_DOCUMENTATION__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await get_model_documentation(action)\n            store.dispatch(actions.getDocumentation.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.getDocumentation.rejected(error));\n        }\n    },\n    \"[DOCUMENTATION] POST_DOCUMENTATION__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await post_model_documentation(action)\n            store.dispatch(actions.postDocumentation.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.postDocumentation.rejected(error));\n        }\n    }\n}\n\nexport default documentationMiddleware;","import { API_RUNS } from './../../lib/data_management/api_endpoints';  \nimport API           from \"./../../api\";\nimport * as actions  from './actions';\n\nexport async function get_runs(action) {\n    var path = {\n      'name': API_RUNS,\n      'params': action.payload.params\n    }\n    \n    const res = await API.get(path);\n    return res.data\n}\n\nexport async function archive_runs(action) {\n    var path = {\n      'name': API_RUNS,\n      'params': action.payload.params\n    }\n    \n    const res = await API.post(path, {'action': 'archive', ...action.payload.payload});\n    return res.data\n}\n\nexport async function unarchive_runs(action) {\n    var path = {\n      'name': API_RUNS,\n      'params': action.payload.params\n    }\n    \n    const res = await API.post(path, {'action': 'unarchive', ...action.payload.payload});\n    return res.data\n}\n\nexport async function delete_runs(action) {\n    var path = {\n      'name': API_RUNS,\n      'params': action.payload.params\n    }\n    \n    const res = await API.post(path, {'action': 'delete', ...action.payload.payload});\n    return res.data\n}\n\nexport async function edit_runs(action) {\n    var path = {\n      'name': API_RUNS,\n      'params': action.payload.params\n    }\n    \n    const res = await API.post(path, {'action': 'edit', ...action.payload.payload});\n    return res.data\n}\n\nconst runsMiddleware = {\n    \"[RUNS] GET_RUNS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await get_runs(action)\n            \n            store.dispatch(actions.getRuns.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.getRuns.rejected(error));\n        }\n    },\n    \"[RUNS] ARCHIVE_RUNS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await archive_runs(action);\n            store.dispatch(actions.archiveRuns.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.archiveRuns.rejected(error));\n        }\n    },\n    \"[RUNS] UNARCHIVE_RUNS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await unarchive_runs(action);\n            store.dispatch(actions.unarchiveRuns.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.unarchiveRuns.rejected(error));\n        }\n    },\n    \"[RUNS] DELETE_RUNS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await delete_runs(action);\n            store.dispatch(actions.deleteRuns.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.deleteRuns.rejected(error));\n        }\n    },\n    \"[RUNS] EDIT_RUNS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await edit_runs(action);\n            store.dispatch(actions.editRuns.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.editRuns.rejected(error));\n        }\n    }\n}\n\nexport default runsMiddleware;","import { API_DASHBOARD } from '../../lib/data_management/api_endpoints';  \nimport API           from \"../../api\";\nimport { redirect } from '../../lib/util/navigation';\nimport * as actions  from './actions';\n\nexport async function get_dashboards(action) {\n    const path = {\n      'name': API_DASHBOARD,\n      'params': action.payload.params\n    }\n\n    const res = await API.get(path, null);\n    return res.data\n}\n\nexport async function create_dashboard(action) {\n    const path = {\n      'name': API_DASHBOARD\n    }\n\n    const res = await API.post(path, action.payload.payload);\n    return res.data\n}\n\nexport async function stop_dashboard(action) {\n    const path = {\n      'name': API_DASHBOARD,\n    }\n    \n    const res = await API.delete(path, action.payload.payload);\n    return res.data\n}\n\nconst dashboardMiddleware = {\n    \"[DASHBOARD] GET_DASHBOARDS__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await get_dashboards(action)\n            \n            store.dispatch(actions.getDashboards.resolved(result));\n        } catch (error) {\n            store.dispatch(actions.getDashboards.rejected(error));\n        }\n    },\n    \"[DASHBOARD] CREATE_DASHBOARD__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await create_dashboard(action)\n            \n            store.dispatch(actions.createDashboard.resolved(result.dashboards));\n            redirect(`/dashboards/${result.dashboard_id}`)\n        } catch (error) {\n            store.dispatch(actions.createDashboard.rejected(error));\n        }\n    },\n    \"[DASHBOARD] STOP_DASHBOARD__SUBMIT\": async (store, next, action) => {\n        try {\n            const result = await stop_dashboard(action)\n            store.dispatch(actions.stopDashboard.resolved(result.dashboards));\n        } catch (error) {\n            store.dispatch(actions.stopDashboard.rejected(error));\n        }\n    }\n}\n\nexport default dashboardMiddleware;","import Models from './modules/models/middleware';\nimport Documentation from './modules/documentation/middleware';\nimport Runs from './modules/runs/middleware';\nimport Tensorboard from './modules/dashboards/middleware';\n\nconst middlewares = {\n  ...Models,\n  ...Documentation,\n  ...Runs,\n  ...Tensorboard,\n};\n\nconst midleware = (store, next, action) => {\n  let middleware = middlewares[action.type];\n\n  if (middleware) {\n    try {\n      middleware(store, next, action);\n    } catch (e) {\n      //console.error(e);\n    }\n  }\n  \n  next(action);\n};\n\nexport default midleware;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport models from './modules/models/reducers';\nimport documentation from './modules/documentation/reducers';\nimport runs from './modules/runs/reducers';\nimport dashboards from './modules/dashboards/reducers';\nimport {getReduxLogger} from './lib/util/config';\nimport thunkMiddleware from 'redux-thunk';\nimport middlewareRouter from './middleware';\nimport {createLogger} from \"redux-logger\";\n\nconst customMiddleWare = store => next => action => {\n    middlewareRouter(store, next, action);\n  };\n\n  \n// Combine Reducers\nlet reducers = combineReducers({\n    models,\n    documentation,\n    runs,\n    dashboards\n});\n\nconst rootReducer = (state, action) => {\n    if (action.type === '[STORE] RESET_DEFAULT') {\n      state = undefined\n    }\n    \n    return reducers(state, action)\n}\n\nlet middlewares = [\n    customMiddleWare,\n    thunkMiddleware,\n    createLogger({\n        collapsed: true,\n        diff     : true,\n        predicate: () => getReduxLogger() === 'on',\n    })\n];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default window.__store = store","import React, { Component } from 'react';\nimport Provider from \"react-redux/es/components/Provider\";\nimport 'babel-polyfill';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport {routerConfig} from \"./routing\";\nimport {createRouter} from \"./lib/util/navigation\";\nimport store from './store';\n\nconst Router = createRouter(routerConfig);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Provider store={store}>\n          <Router>{routes =>\n            <>\n              {routes}\n            </>}\n          </Router>\n        </Provider>\n      </>\n    )\n  }\n}","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./stylesheet/main.scss\";\nimport 'normalize.css';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}